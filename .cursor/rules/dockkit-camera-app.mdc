---
description: 
globs: 
alwaysApply: false
---
# DockKit 相机应用 - 机器人脸部系统指南

## 应用架构概览

DockKit 相机应用围绕一个主界面构建，可以在相机预览模式和机器人脸部模式之间切换。应用**默认启动为机器人脸部模式**。

### 入口点
- @DockKit_CameraApp.swift - 主应用入口点，初始化 CameraModel 和 DockControllerModel
- @ContentView.swift - 根视图，基于 `isRobotFaceMode` 标志在相机预览和机器人脸部之间切换

### 核心状态管理
- @DockCont，管理应用状态、机器人脸部模式和 DockKit 功能
  - `isRobotFaceMode = true` - 应用启动时默认为机器人脸部模式
  -  包含机器人脸部状态，包括眼部位置和情绪
  - `toggleRobotFaceMode()` - 在相机和机器人脸部模式之间切换

## 机器人脸部系统

### 主要机器人脸部组件
- @RobotFaceView.swift - 主要机器人脸部情切换（点击循环切换情绪）
  - 长按随机模式
  - 电机动作集成
  - **无点击提示显示**（已移除以获得更清洁的界面）

### 眼部组件
- @VerticalLEDEyeView.swift - 单个 LED 条眼部组件，包含：
  - 符合参考设计的垂直 LED 条设计
  - 具有预测性移动的人脸跟踪
  - 基于情绪的颜色变化和效果
  - 眨眼动画

### 数据类型和状态
- @DataTypes.swift - 核心类型定义，包括：
  - `RobotMood` - 所有可用的机器人表情
  - `RobotFaceState` - 机器人脸部状态管理
  - `TrackingMode` - DockKit 跟踪模式
  - `ChevronType` - 电机控制方向

## 电机动作系统

### ns.swift - 增强的电机动作系统，特色功能：
  - `FastMotorActionExecutor` - 处理快速、平衡的电机移动
  - 每个机器人表情的情绪到动作映射
  - **动作完成回调** - 电机动作后恢复正常表情
  - 自动回到中心的自平衡移动

### 关键电机动作特性
- 每种情绪都有对应的电机动作（点头、摇头、倾斜等）
- 动作设计为自平衡
- 完成回调系统在动作结束时通知
- 手动模式集成，具有跟踪暂停/恢复功能

## 人脸跟踪行为

### 跟踪逻辑
-**丢失跟踪行为**：保持当前表情（无自动困倦模式）
- 坐标映射确保自然的眼部移动方向
- 范围约束防止极端眼部位置

### 表情管理
- 手动模式：用户通过点击/长按控制表情
- 自动模式：基于跟踪置信度改变表情
- **电机动作集成**：表情触发相应的物理移动
- **恢复行为**：电机动作完成后返回正常表情

## 用户界面组件

### 控制元素
- @MainToolbar.swift - 底部工具栏，带有机器人脸部切换按钮
- @Ca机模式界面（在机器人脸部模式下隐藏）

### DockKit 集成
- @DockControlService.swift - 低级 DockKit 配件控制
- 处理物理电机移动、跟踪和配件事件
- 与人脸检测集成进行机器人眼部跟踪

## 关键行为变更
1. **默认启动**：机器人脸部模式而非相机预览
2. **无点击提示**：更清洁的界面，无指导文本
3. **智能跟踪丢失**：跟踪丢失时保持当前表情
4. **电机动作完成**：动作后自动返回正常表情
5. **增强电机系统**：快速、平衡的移动，带有完成反馈
6. 不要自动提交代码到 git
