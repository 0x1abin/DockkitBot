---
description: 
globs: 
alwaysApply: false
---
# DockKit Camera Project Structure

## Overview
This is a SwiftUI app that demonstrates DockKit APIs for controlling camera accessories with robot face tracking capabilities.

## Key Entry Points

### Main Application
- [DockKit_CameraApp.swift](mdc:DockKitCamera/DockKit_CameraApp.swift) - Main app entry point with automatic robot face mode startup
- [ContentView.swift](mdc:DockKitCamera/ContentView.swift) - Primary UI container

### Core Models
- [CameraModel.swift](mdc:DockKitCamera/Model/CameraModel.swift) - Camera interface and capture management
- [DockControllerModel.swift](mdc:DockKitCamera/Model/DockControllerModel.swift) - DockKit accessory control and robot face mode
- [DockAccessoryController.swift](mdc:DockKitCamera/Model/DockAccessoryController.swift) - Protocol defining DockKit interface

### Services
- [CaptureService.swift](mdc:DockKitCamera/CaptureService.swift) - AVFoundation capture session management
- [DockControlService.swift](mdc:DockKitCamera/DockControlService.swift) - Low-level DockKit API interactions

### Data Types
- [DataTypes.swift](mdc:DockKitCamera/Model/DataTypes.swift) - Core data structures and enums

## Robot Face Mode Implementation

The robot face tracking mode automatically starts during app launch:

1. **Service Initialization**: Camera and DockController services are set up
2. **Delegate Setup**: Communication bridges established between services  
3. **Camera Start**: AVCaptureSession configured with face/body detection
4. **Auto-Enable**: `enableRobotFaceMode()` called to switch to front camera and enable tracking

Key methods:
- `enableRobotFaceMode()` - Automatically enables robot mode during startup
- `toggleRobotFaceMode()` - Manual toggle for user interaction
- `updateRobotEyePositions()` - Updates robot eyes based on face detection

## Preview Support
- [PreviewDockAccessoryControllerModel.swift](mdc:DockKitCamera/Preview Content/PreviewDockAccessoryControllerModel.swift) - Mock implementation for SwiftUI previews
- [PreviewCameraModel.swift](mdc:DockKitCamera/Preview Content/PreviewCameraModel.swift) - Mock camera for previews

## Configuration
- [DockKit-Camera-Info.plist](mdc:DockKit-Camera-Info.plist) - App configuration and permissions
